From libnl3 patch here: https://git.centos.org/rpms/libnl3/blob/c7/f/SOURCES/0003-nl-reserve-integer-overflow-rh1442723.patch
diff --git a/lib/attr.c b/lib/attr.c
index ca5bb43..0e01d20 100644
--- a/lib/attr.c
+++ b/lib/attr.c
@@ -475,6 +475,9 @@ struct nlattr *nla_reserve(struct nl_msg *n, int attrtype, int attrlen)
 {
 	struct nlattr *nla;
 	int tlen;
+
+	if (attrlen < 0)
+		return NULL;
 	
 	tlen = NLMSG_ALIGN(n->nm_nlh->nlmsg_len) + nla_total_size(attrlen);
 
@@ -513,8 +516,11 @@ int nla_put(struct nl_msg *n, int attrtype, int attrlen, const void *data)
 	struct nlattr *nla;
 
 	nla = nla_reserve(n, attrtype, attrlen);
-	if (!nla)
+	if (!nla) {
+		if (attrlen < 0)
+			return nl_errno(EINVAL);
 		return nl_errno(ENOMEM);
+	}
 
 	memcpy(nla_data(nla), data, attrlen);
 	NL_DBG(2, "msg %p: Wrote %d bytes at offset +%td for attr %d\n",
diff --git a/lib/msg.c b/lib/msg.c
index 565c6c4..b0494a1 100644
--- a/lib/msg.c
+++ b/lib/msg.c
@@ -515,6 +515,9 @@ void *nlmsg_reserve(struct nl_msg *n, size_t len, int pad)
 	size_t nlmsg_len = n->nm_nlh->nlmsg_len;
 	size_t tlen;
 
+	if (len > n->nm_size)
+		return NULL;
+
 	tlen = pad ? ((len + (pad - 1)) & ~(pad - 1)) : len;
 
 	if ((tlen + nlmsg_len) > n->nm_size) {
-- 
2.43.5

